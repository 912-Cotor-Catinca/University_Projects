ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@c29d741; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@c29d741
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@c29d741
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt )
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt )
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt )
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt )
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20
300

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@3f488800; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@3f488800
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@3f488800
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt )
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt )
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt )
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt )
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20
300

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@2d9218d0; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@2d9218d0
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@2d9218d0
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt )
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt )
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt )
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt )
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20
300

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@25951bfc; fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@25951bfc
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Barrier.newBarrier@25951bfc
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt )
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt )
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt )
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt )
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20
300

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2))
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2))
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt )
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt )
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt )
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt )
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
print(readHeap(v2))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20
300

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2))
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2))
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2))
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2))
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2))
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2))
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2))
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2))
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 2
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3; new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v3
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2); new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 2)
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3); new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 3)
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (1, int)
v3 -> (1, int)

Heap table:
1 -> 2

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4); int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v3, 4)
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (1, int)

Heap table:
1 -> 2
2 -> 3

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt; NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
int cnt
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2)); fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2))
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
NewBarrierStmt(cnt, readHeap(v2))
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))); fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))); awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt ); writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
awaitBarrier( cnt )
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt ); print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt ); writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt )
print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt )
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
awaitBarrier( cnt )
print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
awaitBarrier( cnt )
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 2
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
print(readHeap(v1))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v3))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 2
Execution stack:
print(readHeap(v1))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 3
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 30
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:
print(readHeap(v2))

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

Heap table:
1 -> 20
2 -> 300
3 -> 4

Output:
4
20
300

File table:

------------------------
