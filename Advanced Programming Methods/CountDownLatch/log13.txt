ID: 1
Execution stack:
int v; v = 0; while (v < 3){fork(print(v); v = v + 1); v = v + 1}; sleep( 5);; print(v * 10)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int v
v = 0; while (v < 3){fork(print(v); v = v + 1); v = v + 1}; sleep( 5);; print(v * 10)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int v
v = 0; while (v < 3){fork(print(v); v = v + 1); v = v + 1}; sleep( 5);; print(v * 10)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 0; while (v < 3){fork(print(v); v = v + 1); v = v + 1}; sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 0; while (v < 3){fork(print(v); v = v + 1); v = v + 1}; sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 0; while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 0; while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 0
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 0
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(print(v); v = v + 1); v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(print(v); v = v + 1); v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(print(v); v = v + 1)
v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(print(v); v = v + 1)
v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 2
Execution stack:
print(v); v = v + 1

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 2
Execution stack:
print(v); v = v + 1

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 1

Heap table:

Output:

File table:

------------------------
ID: 2
Execution stack:
print(v)
v = v + 1

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 1

Heap table:

Output:

File table:

------------------------
ID: 2
Execution stack:
print(v)
v = v + 1

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(print(v); v = v + 1); v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 1

Heap table:

Output:
0

File table:

------------------------
ID: 2
Execution stack:
v = v + 1

Symbol table:
v -> 0

Heap table:

Output:
0

File table:

------------------------
ID: 1
Execution stack:
fork(print(v); v = v + 1); v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 1

Heap table:

Output:
0

File table:

------------------------
ID: 2
Execution stack:
v = v + 1

Symbol table:
v -> 0

Heap table:

Output:
0

File table:

------------------------
ID: 1
Execution stack:
fork(print(v); v = v + 1)
v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 1

Heap table:

Output:
0

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
v -> 1

Heap table:

Output:
0

File table:

------------------------
ID: 1
Execution stack:
fork(print(v); v = v + 1)
v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 1

Heap table:

Output:
0

File table:

------------------------
ID: 1
Execution stack:
v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 1

Heap table:

Output:
0

File table:

------------------------
ID: 3
Execution stack:
print(v); v = v + 1

Symbol table:
v -> 1

Heap table:

Output:
0

File table:

------------------------
ID: 1
Execution stack:
v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 1

Heap table:

Output:
0

File table:

------------------------
ID: 3
Execution stack:
print(v); v = v + 1

Symbol table:
v -> 1

Heap table:

Output:
0

File table:

------------------------
ID: 1
Execution stack:
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 2

Heap table:

Output:
0

File table:

------------------------
ID: 3
Execution stack:
print(v)
v = v + 1

Symbol table:
v -> 1

Heap table:

Output:
0

File table:

------------------------
ID: 1
Execution stack:
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 2

Heap table:

Output:
0

File table:

------------------------
ID: 3
Execution stack:
print(v)
v = v + 1

Symbol table:
v -> 1

Heap table:

Output:
0

File table:

------------------------
ID: 1
Execution stack:
fork(print(v); v = v + 1); v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 2

Heap table:

Output:
0
1

File table:

------------------------
ID: 3
Execution stack:
v = v + 1

Symbol table:
v -> 1

Heap table:

Output:
0
1

File table:

------------------------
ID: 1
Execution stack:
fork(print(v); v = v + 1); v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 2

Heap table:

Output:
0
1

File table:

------------------------
ID: 3
Execution stack:
v = v + 1

Symbol table:
v -> 1

Heap table:

Output:
0
1

File table:

------------------------
ID: 1
Execution stack:
fork(print(v); v = v + 1)
v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 2

Heap table:

Output:
0
1

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
v -> 2

Heap table:

Output:
0
1

File table:

------------------------
ID: 1
Execution stack:
fork(print(v); v = v + 1)
v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 2

Heap table:

Output:
0
1

File table:

------------------------
ID: 1
Execution stack:
v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 2

Heap table:

Output:
0
1

File table:

------------------------
ID: 4
Execution stack:
print(v); v = v + 1

Symbol table:
v -> 2

Heap table:

Output:
0
1

File table:

------------------------
ID: 1
Execution stack:
v = v + 1
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 2

Heap table:

Output:
0
1

File table:

------------------------
ID: 4
Execution stack:
print(v); v = v + 1

Symbol table:
v -> 2

Heap table:

Output:
0
1

File table:

------------------------
ID: 1
Execution stack:
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1

File table:

------------------------
ID: 4
Execution stack:
print(v)
v = v + 1

Symbol table:
v -> 2

Heap table:

Output:
0
1

File table:

------------------------
ID: 1
Execution stack:
while (v < 3){fork(print(v); v = v + 1); v = v + 1}
sleep( 5);; print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1

File table:

------------------------
ID: 4
Execution stack:
print(v)
v = v + 1

Symbol table:
v -> 2

Heap table:

Output:
0
1

File table:

------------------------
ID: 1
Execution stack:
sleep( 5);; print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 4
Execution stack:
v = v + 1

Symbol table:
v -> 2

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 5);; print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 4
Execution stack:
v = v + 1

Symbol table:
v -> 2

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 5);
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 4
Execution stack:

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 5);
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 4);
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 4);
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 3);
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 3);
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 2);
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 2);
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 1);
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 1);
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 0);
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
sleep( 0);
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:
print(v * 10)

Symbol table:
v -> 3

Heap table:

Output:
0
1
2

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
v -> 3

Heap table:

Output:
0
1
2
30

File table:

------------------------
