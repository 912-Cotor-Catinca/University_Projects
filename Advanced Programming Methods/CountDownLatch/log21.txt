ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)); model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x))
model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x))
model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
model.statements.Lock.LockStatement@445e7bf8; writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
model.statements.Lock.LockStatement@5c8747b6; writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
model.statements.Lock.LockStatement@445e7bf8
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
model.statements.Lock.LockStatement@5c8747b6
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
model.statements.Lock.LockStatement@445e7bf8
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
model.statements.Lock.LockStatement@5c8747b6
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)); model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q))
model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q))
model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
model.statements.Lock.LockStatement@3f83677d; writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
model.statements.Lock.LockStatement@4b41144e; writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
model.statements.Lock.LockStatement@3f83677d
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
model.statements.Lock.LockStatement@4b41144e
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
model.statements.Lock.LockStatement@3f83677d
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
model.statements.Lock.LockStatement@4b41144e
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Lock.LockStatement@595f3dcc; print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Lock.LockStatement@595f3dcc
print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
model.statements.Lock.LockStatement@595f3dcc
print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
unlock( x); model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
model.statements.Lock.LockStatement@6ee91ca4; print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
model.statements.Lock.LockStatement@6ee91ca4
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
model.statements.Lock.LockStatement@6ee91ca4
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200
350

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200
350

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200
350

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200
350

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200
350

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200
350

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200
350

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200
350

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 200
2 -> 350

Output:
200
350

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1; Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v1
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
Ref(int) v2
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int x
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int q
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v1, 20)
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30); newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
new(v2, 30)
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (1, int)

Heap table:
1 -> 20

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x); fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(x)
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)); newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x))
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q); fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)); lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
newLock(q)
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
fork(lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x))
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)); NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x); writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
fork(fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q))
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
lock(x)
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1); unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)); lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
writeHeap(v1, readHeap(v1) * 10)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
writeHeap(v1, readHeap(v1) - 1)
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
fork(lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q))
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 20
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:
unlock( x)

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q); writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 2
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 3
Execution stack:

Symbol table:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
lock(q)
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 4
Execution stack:
writeHeap(v2, readHeap(v2) * 10)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 5
Execution stack:
writeHeap(v2, readHeap(v2) + 5)
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 30

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement; lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 4
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 5
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
NopStatement
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x); print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
lock(x)
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1)); unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v1))
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x); lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( x)
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q); print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
lock(q)
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2)); unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
print(readHeap(v2))
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:
unlock( q)

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Heap table:
1 -> 190
2 -> 350

Output:
190
350

File table:

------------------------
