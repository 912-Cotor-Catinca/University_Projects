-----------------START STATE------------
---------------------ID-----------------
1
----------Execution Stack: --------
wH(v = 20)
Ref(Ref(int)) a
wH(a = v)
wH(v = 30)
print(rh(rh(a)))



Ref(int) v
-------- Symbol Table: --------

---------- Output: -----------
[]
---------- File Table -----

------------Heap-----------

------------END STATE-----------

-----------------START STATE------------
---------------------ID-----------------
1
----------Execution Stack: --------
wH(v = 20)
Ref(Ref(int)) a
wH(a = v)
wH(v = 30)
print(rh(rh(a)))




-------- Symbol Table: --------
Key: v, Value: (0, int)

---------- Output: -----------
[]
---------- File Table -----

------------Heap-----------

------------END STATE-----------

-----------------START STATE------------
---------------------ID-----------------
1
----------Execution Stack: --------
Ref(Ref(int)) a
wH(a = v)
wH(v = 30)
print(rh(rh(a)))


wH(v = 20)
-------- Symbol Table: --------
Key: v, Value: (0, int)

---------- Output: -----------
[]
---------- File Table -----

------------Heap-----------

------------END STATE-----------

-----------------START STATE------------
---------------------ID-----------------
1
----------Execution Stack: --------
Ref(Ref(int)) a
wH(a = v)
wH(v = 30)
print(rh(rh(a)))



-------- Symbol Table: --------
Key: v, Value: (1, int)

---------- Output: -----------
[]
---------- File Table -----

------------Heap-----------
Key: 1, Value: 20

------------END STATE-----------

-----------------START STATE------------
---------------------ID-----------------
1
----------Execution Stack: --------
wH(a = v)
wH(v = 30)
print(rh(rh(a)))

Ref(Ref(int)) a
-------- Symbol Table: --------
Key: v, Value: (1, int)

---------- Output: -----------
[]
---------- File Table -----

------------Heap-----------
Key: 1, Value: 20

------------END STATE-----------

-----------------START STATE------------
---------------------ID-----------------
1
----------Execution Stack: --------
wH(a = v)
wH(v = 30)
print(rh(rh(a)))


-------- Symbol Table: --------
Key: a, Value: (0, Ref(int))
Key: v, Value: (1, int)

---------- Output: -----------
[]
---------- File Table -----

------------Heap-----------
Key: 1, Value: 20

------------END STATE-----------

-----------------START STATE------------
---------------------ID-----------------
1
----------Execution Stack: --------
wH(v = 30)
print(rh(rh(a)))
wH(a = v)
-------- Symbol Table: --------
Key: a, Value: (0, Ref(int))
Key: v, Value: (1, int)

---------- Output: -----------
[]
---------- File Table -----

------------Heap-----------
Key: 1, Value: 20

------------END STATE-----------

-----------------START STATE------------
---------------------ID-----------------
1
----------Execution Stack: --------
wH(v = 30)
print(rh(rh(a)))

-------- Symbol Table: --------
Key: a, Value: (2, Ref(int))
Key: v, Value: (1, int)

---------- Output: -----------
[]
---------- File Table -----

------------Heap-----------
Key: 1, Value: 20
Key: 2, Value: (1, int)

------------END STATE-----------

-----------------START STATE------------
---------------------ID-----------------
1
----------Execution Stack: --------
print(rh(rh(a)))wH(v = 30)
-------- Symbol Table: --------
Key: a, Value: (2, Ref(int))
Key: v, Value: (1, int)

---------- Output: -----------
[]
---------- File Table -----

------------Heap-----------
Key: 1, Value: 20
Key: 2, Value: (1, int)

------------END STATE-----------

-----------------START STATE------------
---------------------ID-----------------
1
----------Execution Stack: --------
print(rh(rh(a)))
-------- Symbol Table: --------
Key: a, Value: (2, Ref(int))
Key: v, Value: (3, int)

---------- Output: -----------
[]
---------- File Table -----

------------Heap-----------
Key: 1, Value: 20
Key: 2, Value: (1, int)
Key: 3, Value: 30

------------END STATE-----------

-----------------START STATE------------
---------------------ID-----------------
1
----------Execution Stack: --------

-------- Symbol Table: --------
Key: a, Value: (2, Ref(int))
Key: v, Value: (3, int)

---------- Output: -----------
[20]
---------- File Table -----

------------Heap-----------
Key: 1, Value: 20
Key: 2, Value: (1, int)
Key: 3, Value: 30

------------END STATE-----------

ID: 1
Execution stack:
int v; v = 4; while (v > 0){print(v); v = v - 1}; print(v)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int v
v = 4; while (v > 0){print(v); v = v - 1}; print(v)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int v
v = 4; while (v > 0){print(v); v = v - 1}; print(v)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 4; while (v > 0){print(v); v = v - 1}; print(v)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 4; while (v > 0){print(v); v = v - 1}; print(v)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 4; while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 4; while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 4
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 4
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2
1

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2
1

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 0

Heap table:

Output:
4
3
2
1

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 0

Heap table:

Output:
4
3
2
1

File table:

------------------------
ID: 1
Execution stack:
print(v)

Symbol table:
v -> 0

Heap table:

Output:
4
3
2
1

File table:

------------------------
ID: 1
Execution stack:
int v; v = 4; while (v > 0){print(v); v = v - 1}; print(v)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int v
v = 4; while (v > 0){print(v); v = v - 1}; print(v)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
int v
v = 4; while (v > 0){print(v); v = v - 1}; print(v)

Symbol table:

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 4; while (v > 0){print(v); v = v - 1}; print(v)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 4; while (v > 0){print(v); v = v - 1}; print(v)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 4; while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 4; while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 4
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = 4
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 0

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 4

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 3

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 2

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
print(v); v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
print(v)
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2
1

File table:

------------------------
ID: 1
Execution stack:
v = v - 1
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 1

Heap table:

Output:
4
3
2
1

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 0

Heap table:

Output:
4
3
2
1

File table:

------------------------
ID: 1
Execution stack:
while (v > 0){print(v); v = v - 1}
print(v)

Symbol table:
v -> 0

Heap table:

Output:
4
3
2
1

File table:

------------------------
ID: 1
Execution stack:
print(v)

Symbol table:
v -> 0

Heap table:

Output:
4
3
2
1

File table:

------------------------
ID: 1
Execution stack:
print(v)

Symbol table:
v -> 0

Heap table:

Output:
4
3
2
1

File table:

------------------------
ID: 1
Execution stack:

Symbol table:
v -> 0

Heap table:

Output:
4
3
2
1
0

File table:

------------------------
